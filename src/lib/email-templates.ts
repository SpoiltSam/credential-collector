// Email templates for client invitations and notifications
import { ClientInfo, ServiceDefinition } from '@/types';
import nodemailer from 'nodemailer';

export interface ClientInvitationEmailOptions {
  clientInfo: ClientInfo;
  services: ServiceDefinition[];
  collectionUrl: string;
  expiresAt: Date;
  adminNotes?: string;
}

/**
 * Send professional invitation email to client with collection link
 */
export async function sendClientInvitationEmail({
  clientInfo,
  services,
  collectionUrl,
  expiresAt,
  adminNotes,
}: ClientInvitationEmailOptions): Promise<void> {
  const subject = `Secure Credential Collection - ${services.length} Service${services.length > 1 ? 's' : ''} Required`;
  
  const servicesList = services.map(service => `
    <li>
      <strong>${service.name}</strong>
      <br>
      <span style="color: #666; font-size: 14px;">${service.description}</span>
    </li>
  `).join('');

  const htmlContent = `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Credential Collection Request</title>
    </head>
    <body style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;">
      
      <div style="text-align: center; margin-bottom: 30px;">
        <h1 style="color: #2563eb; margin-bottom: 10px;">Automate Advisory</h1>
        <p style="color: #666; margin: 0;">Secure Credential Collection</p>
      </div>
      
      <div style="background: #f8fafc; border-radius: 8px; padding: 20px; margin-bottom: 20px;">
        <h2 style="color: #1e293b; margin-top: 0;">Hello ${clientInfo.name},</h2>
        
        <p>We need to securely collect credentials for the following services to set up your integrations:</p>
        
        <ul style="background: white; border-radius: 6px; padding: 20px; margin: 20px 0;">
          ${servicesList}
        </ul>
        
        ${adminNotes ? `
          <div style="background: #eff6ff; border-left: 4px solid #2563eb; padding: 15px; margin: 20px 0;">
            <h4 style="margin-top: 0; color: #1e40af;">Additional Notes:</h4>
            <p style="margin-bottom: 0;">${adminNotes}</p>
          </div>
        ` : ''}
      </div>
      
      <div style="text-align: center; margin: 30px 0;">
        <a href="${collectionUrl}" 
           style="background: #2563eb; color: white; padding: 15px 30px; text-decoration: none; border-radius: 6px; font-weight: 500; display: inline-block;">
          Submit Credentials Securely
        </a>
      </div>
      
      <div style="background: #f0f9ff; border: 1px solid #bae6fd; border-radius: 6px; padding: 15px; margin: 20px 0;">
        <h4 style="margin-top: 0; color: #0284c7;">ðŸ”’ Security Information</h4>
        <ul style="margin-bottom: 0; padding-left: 20px;">
          <li>This link is unique to you and expires on <strong>${expiresAt.toLocaleDateString()}</strong></li>
          <li>Your credentials will be encrypted before transmission</li>
          <li>No sensitive data is stored in our systems</li>
          <li>This link can only be used once for security</li>
        </ul>
      </div>
      
      <div style="background: #fef3c7; border: 1px solid #f59e0b; border-radius: 6px; padding: 15px; margin: 20px 0;">
        <h4 style="margin-top: 0; color: #92400e;">âš¡ Quick Tips</h4>
        <ul style="margin-bottom: 0; padding-left: 20px;">
          <li>Each service includes video instructions to help you find the required information</li>
          <li>The form will validate your credentials in real-time where possible</li>
          <li>If you encounter any issues, reply to this email for assistance</li>
        </ul>
      </div>
      
      <hr style="border: none; border-top: 1px solid #e5e7eb; margin: 30px 0;">
      
      <div style="text-align: center; color: #666; font-size: 14px;">
        <p>If you have any questions, please don't hesitate to reach out.</p>
        <p style="margin-bottom: 0;">
          Best regards,<br>
          <strong>Automate Advisory Team</strong>
        </p>
      </div>
      
      <div style="text-align: center; margin-top: 20px; padding-top: 20px; border-top: 1px solid #e5e7eb; color: #9ca3af; font-size: 12px;">
        <p>This email was generated by our secure credential collection system.</p>
      </div>
      
    </body>
    </html>
  `;

  const textContent = `
Secure Credential Collection - ${services.length} Service${services.length > 1 ? 's' : ''} Required

Hello ${clientInfo.name},

We need to securely collect credentials for the following services to set up your integrations:

${services.map(service => `â€¢ ${service.name} - ${service.description}`).join('\n')}

${adminNotes ? `\nAdditional Notes:\n${adminNotes}\n` : ''}

Please submit your credentials securely using this link:
${collectionUrl}

SECURITY INFORMATION:
â€¢ This link is unique to you and expires on ${expiresAt.toLocaleDateString()}
â€¢ Your credentials will be encrypted before transmission
â€¢ No sensitive data is stored in our systems
â€¢ This link can only be used once for security

QUICK TIPS:
â€¢ Each service includes video instructions to help you find the required information
â€¢ The form will validate your credentials in real-time where possible
â€¢ If you encounter any issues, reply to this email for assistance

If you have any questions, please don't hesitate to reach out.

Best regards,
Automate Advisory Team

---
This email was generated by our secure credential collection system.
  `;

  // Use the existing email infrastructure
  const transporter = nodemailer.createTransport({
    host: process.env.SMTP_HOST,
    port: parseInt(process.env.SMTP_PORT || '587'),
    secure: false,
    auth: {
      user: process.env.SMTP_USER,
      pass: process.env.SMTP_PASS,
    },
  });

  try {
    await transporter.sendMail({
      from: process.env.SMTP_USER,
      to: clientInfo.email,
      subject,
      text: textContent,
      html: htmlContent,
    });
  } catch (error) {
    console.error('Failed to send invitation email:', error);
    throw new Error('Failed to send invitation email to client');
  }
}